#test
name: Deploy qNinjaLite Console

on:
  push:
    branches: [ prod ]
    paths:
      - console/**

env:
  SERVICE_NAME: qNinjaLite
  AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN_CF_DEPLOY }}
  CF_DISTRIBUTION_ID: ${{ secrets.CF_DISTRIBUTION_ID_PROD }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
  SLACK_USERNAME: qNinjaLite
  SLACK_CHANNEL: pcr

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    #- name: Build
    #  run: |
    #    npm install
    #    gulp

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: ap-northeast-1
    
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync console/ s3://qpcr-ninja/${GITHUB_REF##*/}/
        aws cloudfront create-invalidation --distribution-id ${{ env.CF_DISTRIBUTION_ID }} --paths /*

    - name: Slack Notification on Success
      if: ${{ success() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_TITLE: ${{ env.SERVICE_NAME }} Console Deploy Success (prod)
        SLACK_COLOR: good

    - name: Slack Notification on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_TITLE: ${{ env.SERVICE_NAME }} Console Deploy Failure (prod)
        SLACK_COLOR: danger
